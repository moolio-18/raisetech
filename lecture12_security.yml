AWSTemplateFormatVersion: 2010-09-09
#-----------------------------------------------------------------
# Parameters
#-----------------------------------------------------------------
Parameters:
  NameBase:
    Description: this is base name.
    Type: String
    Default: lecture10cf
  MyIP:
    Description: this is base name.
    Type: String
    Default: 0.0.0.0/0
#-----------------------------------------------------------------
# Resources
#----------------------------------------------------------------- 
Resources: 
#-------------EC2securitygroup------------------------------------
  EC2secGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub securityEC2-${NameBase}
      GroupDescription: lecture10 for ec2 from CF
      VpcId: !ImportValue VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIP
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub EC2secGroup-${NameBase}

#-------------RDSsecuritygroup------------------------------------
  RDSsecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub securityRDS-${NameBase}
      GroupDescription: lecture10 for rds from CF
      VpcId: !ImportValue VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2secGroup
      Tags:
        - Key: Name
          Value: !Sub RDSsecGroup-${NameBase}

#-------------ALBsecuritygroup------------------------------------
  ALBsecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub securityALB-${NameBase}
      GroupDescription: lecture10 for alb from cf
      VpcId: !ImportValue VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ALBsecGroup-${NameBase}

#-------------InstanceProfile-------------------------------------
  EC2toS3IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref s3iamRole

#-------------s3 iamrole, policies-------------------------------------
  s3iamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub iamrole-${NameBase}
      Path: /
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement: 
          -
            Effect: Allow
            Principal: 
              Service: 
                - ec2.amazonaws.com
            Action: 
              - sts:AssumeRole
 
  AccessPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: s3access
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
              - s3:DeleteObject
              - s3:GetBucketLocation
          Resource: "arn:aws:s3:::*"
        - Effect: Allow
          Action: "*"
          Resource:
            - "arn:aws:s3:::<lecture10-cf-bucket>"
            - "arn:aws:s3:::<lecture10-cf-bucket>/*"
      Roles:
      - !Ref s3iamRole

#-----------------------------------------------------------------
# Outputs
#----------------------------------------------------------------- 
Outputs:
  EC2secGroup:
    Value: !Ref EC2secGroup
    Export: 
      Name: EC2secGroup

  RDSsecGroup:
    Value: !Ref RDSsecGroup
    Export: 
      Name: RDSsecGroup

  ALBsecGroup:
    Value: !Ref ALBsecGroup
    Export: 
      Name: ALBsecGroup

  EC2toS3IamInstanceProfile:
    Value: !Ref EC2toS3IamInstanceProfile
    Export: 
      Name: IamInstanceProfile
